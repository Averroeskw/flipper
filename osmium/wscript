# Osmium build script.

import os

def configure(cfg):
	pass

def build(bld):
	for platform in bld.env.PLATFORMS:
		name = os.path.basename(platform)
		_env = bld.all_envs['platform-' + name].derive()
		if _env.BUILD_OSMIUM:
			# Loads all the symbols from the provided static libraries before linking.
			_env.STLIB_MARKER = '-Wl,--start-group'
			STARTFILE = []
			if (_env.STARTFILES):
				STARTFILE = [bld.path.parent.find_node(_env.STARTFILES)]
			bld.program(source = bld.path.ant_glob('src/**') + STARTFILE, target = 'osmium-' + name + '.elf', use = 'platform-' + name + ' modules-' + name + ' flipper-' + name, install_path = None, env = _env)
			bld.add_group()
			bld(rule = '${OBJCOPY} -O ihex ${SRC} ${TGT}', source = 'osmium-' + name + '.elf', target = 'osmium-' + name + '.hex', use = 'osmium-' + name + '.elf', env = _env)
			bld(rule = '${OBJCOPY} -O binary ${SRC} ${TGT}', source = 'osmium-' + name + '.elf', target = 'osmium-' + name + '.bin', use = 'osmium-' + name + '.elf', env = _env)
			bld.add_group()
			if bld.options.upload == name:
				bld(features = _env.UPLOADER, source = 'osmium-' + name + '.hex', env = _env)
